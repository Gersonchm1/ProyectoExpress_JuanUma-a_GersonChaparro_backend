openapi: 3.0.3
info:
  title: UsersData API
  version: 1.0.0
  description: API para administración y gestión de usuarios, películas, categorías, reseñas y ratings.
servers:
  - url: /api/v1
    description: Servidor local

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
        createdAt:
          type: string
          format: date-time
    Movie:
      type: object
      properties:
        _id:
          type: string
        titulo:
          type: string
        descripcion:
          type: string
        anio:
          type: integer
        genero:
          type: string
        fecha:
          type: string
          format: date-time
        Vistas:
          type: integer
    Category:
      type: object
      properties:
        id_genero:
          type: integer
        nombre:
          type: string
        fecha:
          type: string
          format: date-time
    Comment:
      type: object
      properties:
        id_comentario:
          type: string
        comentario:
          type: string
        id_pelicula:
          type: string
        id_usuario:
          type: string
        fecha:
          type: string
          format: date-time
    Rating:
      type: object
      properties:
        _id:
          type: string
        rating:
          type: number
        id_pelicula:
          type: string
        id_usuario:
          type: string
        fecha:
          type: string
          format: date-time

security:
  - BearerAuth: []

paths:
  # ================== USERS ==================
  /register:
    post:
      tags:
        - Users
      summary: Registrar nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                correo:
                  type: string
                contrasena:
                  type: string
      responses:
        '201':
          description: Usuario registrado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: Error al registrar usuario

  /login:
    post:
      tags:
        - Users
      summary: Iniciar sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                correo:
                  type: string
                contrasena:
                  type: string
      responses:
        '200':
          description: Login exitoso
        '500':
          description: Error en login

  /profile:
    get:
      tags:
        - Users
      summary: Obtener perfil de usuario autenticado
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Perfil del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  # ================== MOVIES ==================
  /peliculas:
    get:
      tags:
        - Movies
      summary: Ver todas las películas
      responses:
        '200':
          description: Lista de películas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
    post:
      tags:
        - Admin
      summary: Agregar nueva película
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                titulo:
                  type: string
                descripcion:
                  type: string
                anio:
                  type: integer
                genero:
                  type: string
      responses:
        '201':
          description: Película agregada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'

  /peliculas/{id}:
    get:
      tags:
        - Movies
      summary: Buscar película por ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Información de la película
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
    put:
      tags:
        - Admin
      summary: Actualizar película
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                titulo:
                  type: string
                descripcion:
                  type: string
                anio:
                  type: integer
                genero:
                  type: string
      responses:
        '200':
          description: Película actualizada
    delete:
      tags:
        - Admin
      summary: Eliminar película
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Película eliminada

  /peliculas/top:
    get:
      tags:
        - Movies
      summary: Obtener top películas por vistas
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Lista de películas top

  /peliculas/categoria/{id_genero}:
    get:
      tags:
        - Movies
      summary: Ver películas por categoría
      parameters:
        - in: path
          name: id_genero
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Lista de películas por categoría

  /peliculas/{id}/views:
    put:
      tags:
        - Movies
      summary: Incrementar vistas de una película
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Vistas incrementadas

  # ================== CATEGORIES ==================
  /categorias:
    post:
      tags:
        - Admin
      summary: Agregar categoría
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
      responses:
        '201':
          description: Categoría agregada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'

  /categorias/{id_genero}:
    put:
      tags:
        - Admin
      summary: Actualizar categoría
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id_genero
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
      responses:
        '200':
          description: Categoría actualizada
    delete:
      tags:
        - Admin
      summary: Eliminar categoría
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id_genero
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Categoría eliminada

  # ================== COMMENTS ==================
  /resenas:
    get:
      tags:
        - Comments
      summary: Ver todos los comentarios
      responses:
        '200':
          description: Lista de comentarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'

  /resenas/{id_pelicula}:
    get:
      tags:
        - Comments
      summary: Ver comentarios de una película
      parameters:
        - in: path
          name: id_pelicula
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Comentarios por película

  /resenas/{id_pelicula}/{id_usuario}:
    post:
      tags:
        - Comments
      summary: Agregar comentario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          description: Comentario agregado
    put:
      tags:
        - Comments
      summary: Actualizar comentario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          description: Comentario actualizado

  /resenas/{id_usuario}/{id_pelicula}/{id_comentario}:
    delete:
      tags:
        - Comments
      summary: Eliminar comentario
      responses:
        '200':
          description: Comentario eliminado

  /resenas/{id_pelicula}/count:
    get:
      tags:
        - Comments
      summary: Contar comentarios por película
      responses:
        '200':
          description: Total comentarios

  # ================== RATINGS ==================
  /ratings/{id_pelicula}:
    get:
      tags:
        - Ratings
      summary: Ver ratings de una película
      responses:
        '200':
          description: Lista de ratings
    post:
      tags:
        - Ratings
      summary: Agregar rating
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '201':
          description: Rating agregado

  /ratings/top:
    get:
      tags:
        - Ratings
      summary: Top películas por rating
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Lista top películas por rating
